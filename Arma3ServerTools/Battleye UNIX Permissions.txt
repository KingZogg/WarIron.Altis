Battleye Filters Explained

The Battleye filters are simply keyword searches that follow a set of rules.
You give it keywords to look for (and what to do if they are found) in the TXT files located in the Battleye directory of your server's FTP space.
The format is:
[rule] [keyword to search for] !"[exceptions that you want it to ignore]" 

If your keywords or exceptions contain any " , they need to have a \ in front so it does not break the line.

An example of part of the scripts.txt file:
_____
1 "waypointAttachObject" !"\"waypointAttachObject\"," 

5 "remoteControl" !"\"remoteControl\","

1 "switchCamera" !"\"switchCamera\"," !"rswitchCamera = 'switchCamera'" !"rswitchCameracode = compile PreprocessFile  (BIS_PathMPscriptCommands + 'switchCamera.sqf')"

5 "BIS_fnc_AAN"

1 "rsetTask" !"rsetTaskState = 'setTaskState'" !"rsetTaskStatecode = compile PreprocessFile (BIS_PathMPscriptCommands + 'setTaskState.sqf')"

1 "rsay" !"rsay = 'say'" !"rsaycode" !"if (_local) then {\n_unit say [_sound, _dis];\n} else {\n[nil,_unit,rSAY,[_sound, _dis]] call  RE;\n};\n};" !"[nil,_trap,rSAY,[\"trap_bear_0\",60]] call RE;" 

1 "rsaycode" !"rsaycode = compile PreprocessFile (BIS_PathMPscriptCommands + 'say.sqf')" !"rsaycode"//

1 "rland" !"rland = 'land'" !"rlandcode"

_____

Rules you can set are:

1 = Log to .log file only
2 = Log to console/RCON only
3 = Log to both
4 = Silent kick
5 = Kick and log to .log file
6 = Kick and log to console
7 = Kick and log to both